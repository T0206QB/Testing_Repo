(function(){function t(t){var e,i,s=t.length;if(0==s)return t;for(;--s;)e=Math.floor(Math.random()*(s+1)),i=t[s],t[s]=t[e],t[e]=i;return t}var e=function(){this.versionScript="Script Version:4.1"};e.prototype.getSolitaireVersion=function(){return this.versionScript};var i=function(){};i.prototype.suits={HEART:0,SPADES:1,DIAMONDS:2,CLUBS:3},i.prototype.colors={RED:0,BLACK:1},i.prototype.init=function(t){if(this.suit=0,this.weight=0,this.isFaceUp=0,"string"==typeof t){var e={},i=t.split("_");1==i.length&&(e.weight=parseInt(i[0]),e.suit=1,e.isFaceUp=0),2==i.length&&(e.weight=parseInt(i[0]),"-"==i[1]?(e.suit=1,e.isFaceUp=1):(e.suit=parseInt(i[1]),e.isFaceUp=0)),3==i.length&&(e.weight=parseInt(i[0]),e.suit=parseInt(i[1]),e.isFaceUp=1),t=e}return"object"==typeof t&&(void 0!==t.suit&&this.setSuit(t.suit),void 0!==t.weight&&this.setWeight(t.weight),void 0!==t.isFaceUp&&this.setFaceUp(t.isFaceUp),void 0!==t.notACard&&(console.warn("using fake card"),this.notACard=!0,this.suit=-2,this.weight=-2,this.index=-2,this.isFaceUp=0)),this},i.prototype.createCardBySpecificValue=function(t,e){return this.suit=e,this.weight=t,this.isFaceUp=0,this.index=0,this},i.prototype.getSuit=function(){return this.suit},i.prototype.setSuit=function(t){return"number"==typeof t&&(this.suit=Math.min(Math.max(0,parseInt(t)),3)),this},i.prototype.getColor=function(){return this.getSuit()%2==0?0:1},i.prototype.getWeight=function(){return this.weight},i.prototype.setWeight=function(t){return"number"==typeof t&&void 0===this.notACard&&(this.weight=Math.min(Math.max(0,parseInt(t)),12)),this},i.prototype.isRevealed=function(){return this.isFaceUp},i.prototype.reveal=function(){return this.isFaceUp=1,this},i.prototype.hide=function(){return this.isFaceUp=0,this},i.prototype.setFaceUp=function(t){return"number"!=typeof t&&(t=1),t?this.reveal():this.hide(),this},i.prototype.placeAt=function(t){return"number"!=typeof t&&(t=-1),this.indexInDeck=t,this},i.prototype.getIndex=function(){return this.indexInDeck},i.prototype.setDeck=function(t){return this.deck=t,this},i.prototype.getDeck=function(){return void 0===this.deck&&(window.bugedCard=this,console.log(this,"has no deck")),this.deck},i.prototype.getNextCard=function(){return this.getDeck().getCard(this.getIndex()+1)},i.prototype.getPreviousCard=function(){return this.getDeck().getCard(this.getIndex()-1)},i.prototype.isSameSuit=function(t){return!("object"!=typeof t||void 0!==t.notACard||"function"!=typeof t.getSuit||t.getSuit()!==this.getSuit())},i.prototype.isDifferentSuit=function(t){return!("object"!=typeof t||void 0!==t.notACard||"function"!=typeof t.getSuit||(t.getSuit()<=1?t.getSuit()+2:t.getSuit()-2)==this.getSuit()||t.getSuit()==this.getSuit())},i.prototype.isOneOver=function(t){return!("object"!=typeof t||"function"!=typeof t.getWeight||t.getWeight()!==this.getWeight()+1)},i.prototype.isOneBellow=function(t){return!("object"!=typeof t||"function"!=typeof t.getWeight||t.getWeight()!==this.getWeight()-1)},i.prototype.getSimplified=function(){var t={};return t.weight=this.getWeight(),t.suit=this.getSuit(),t.isFaceUp=this.isRevealed(),t.index=this.getIndex(),t},i.prototype.getSimplifiedCompressed=function(){var t="";return t+=this.getWeight(),1!==this.getSuit()&&(t+="_"+this.getSuit()),1==this.isRevealed()&&(t+="_-"),t},i.prototype.canMove=function(){return 1==this.isRevealed()};var s=function(){this.cards=[]};s.prototype.add=function(t){if("string"==typeof t){for(var e=t.split(","),s=0;s<e.length;s++){var n=e[s],r=(new i).init(n);this.add(r)}return this}if("object"!=typeof t)throw"This is not a card, nor an array of cards";if("function"==typeof t.push){for(var o in t)t.hasOwnProperty(o)&&this.add(t[o]);return this}return void 0!==t.suit?(t.setDeck(this),this.cards.push(t),this.rebuildOrder()):this},s.prototype.deal=function(){return this.cards.length>0&&this.cards.splice(-1,1)[0]},s.prototype.getNbCardsInDeck=function(){return this.cards.length},s.prototype.rebuildOrder=function(){for(var t in this.cards)this.cards.hasOwnProperty(t)&&this.cards[t].placeAt(parseInt(t));return this},s.prototype.shuffle=function(){return t(this.cards),this.rebuildOrder()},s.prototype.getCard=function(t){return"number"!=typeof t&&(t=0),t<this.getNbCardsInDeck()?this.cards[t]:new i({notACard:!0})},s.prototype.getAllCards=function(){return this.cards},s.prototype.getCardOnTop=function(){return this.getCard(this.getNbCardsInDeck()-1)},s.prototype.getCardAtBottom=function(){return this.getNbCardsInDeck()>0&&this.getCard(0)},s.prototype.takeCard=function(t,e){return"number"!=typeof e&&(e=1),"number"!=typeof t&&(t=0),t+e<=this.getNbCardsInDeck()?this.cards.splice(t,e):[new i({notACard:!0})]},s.prototype.takeCardOnTop=function(){return this.takeCard(Math.max(0,this.getNbCardsInDeck()-1),1)},s.prototype.takeCardAtBottom=function(){return this.takeCard(0)},s.prototype.getNumOfUnrevealCard=function(){var t=0;if(this.getNbCardsInDeck()>1){for(var e=this.getCardOnTop(),i=e.getPreviousCard(),s=0;s<this.getNbCardsInDeck();s++)0==e.isRevealed()&&t++,e=i,0!=e.getIndex()&&(i=e.getPreviousCard());return t}return t},s.prototype.getNumOfGreyCard=function(){var t=0;if(this.getNbCardsInDeck()>1){for(var e=this.getCardOnTop(),i=e.getPreviousCard(),s=0;s<this.getNbCardsInDeck();s++)1==e.isRevealed()&&0==e.canMove()&&t++,e=i,0!=e.getIndex()&&(i=e.getPreviousCard());return t}return t},s.prototype.getNumOfWhiteCard=function(){var t=0;if(this.getNbCardsInDeck()>1){for(var e=this.getCardOnTop(),i=e.getPreviousCard(),s=0;s<this.getNbCardsInDeck();s++)1==e.isRevealed()&&1==e.canMove()&&t++,e=i,0!=e.getIndex()&&(i=e.getPreviousCard());return t}return t},s.prototype.addSuits=function(t){for(var e in"number"!=typeof t&&"object"!=typeof t&&(t=[0,1,2,3]),t)if(t.hasOwnProperty(e))for(var s=0;s<13;s++)this.add((new i).init({weight:s,suit:t[e]}));return this},s.prototype.getLinkableCardFromIndex=function(t){for(var e=this.getCard(t),i=e.getNextCard(),s=[e];e.isDifferentSuit(i)&&e.isOneBellow(i)&&1==e.isRevealed();)s.push(i),e=i,i=e.getNextCard();return s},s.prototype.getLinkableCardFromIndexAsJSON=function(t){for(var e=0,i=this.getCard(t),s=i.getNextCard(),n={0:i.getSimplified()};i.isDifferentSuit(s)&&i.isOneBellow(s)&&1==i.isRevealed();)e++,n[e]=s.getSimplified(),i=s,s=i.getNextCard();return n.count=e+1,JSON.stringify(n)},s.prototype.checkValidCard=function(t){return this.getNbCardsInDeck()>0?t==this.getCardOnTop().getWeight()+1:0==t},s.prototype.asSimpleObject=function(){var t={count:0};for(var e in this.cards)this.cards.hasOwnProperty(e)&&(t[t.count]=this.cards[e].getSimplified(),t.count++);return t},s.prototype.asJSONString=function(){return JSON.stringify(this.asSimpleObject())},s.prototype.asSimpleArray=function(){var t=[];for(var e in this.cards)this.cards.hasOwnProperty(e)&&t.push(this.cards[e].getSimplified());return t},s.prototype.asSimpleCompressed=function(){var t="";for(var e in this.cards)this.cards.hasOwnProperty(e)&&(t+=(""===t?"":",")+this.cards[e].getSimplifiedCompressed());return t},s.prototype.getDeckHeight=function(t,e,i,s,n){var r=[],o=0,a=0,d=0,h=0;"number"!=typeof i&&(i=1),"number"!=typeof s&&(s=1),"number"!=typeof n&&(n=1);for(var g=0;g<this.cards.length;g++)this.cards[g].isRevealed()?this.cards[g].canMove()?0!=g&&0==this.cards[g-1].isRevealed()?o++:d++:0!=g&&0==this.cards[g-1].isRevealed()?o++:a++:o++,o+a+d===1&&(h=o*i+a*s+d*n),r.push(o*i+a*s+d*n-h);return[r[r.length-1]*e+t/2,r]},s.prototype.getCardsDisplacement=function(t,e,i,s,n,r,o,a){var d,h=100,g=!1,c=200;for("number"!=typeof o&&(o=80),"number"!=typeof s&&(s=1),"number"!=typeof n&&(n=1),"number"!=typeof r&&(r=1),"number"!=typeof a&&(a=1);c>0&&(d=this.getDeckHeight(e,i*(h/100),s,n,r))&&d[0]>t;)c--,!g&&h<o?(h=100,s=0,g=!0):h-=a;for(var f=0;f<d[1].length;f++)d[1][f]=Math.round(d[1][f]*i*(h/100)*100)/100;return JSON.stringify(d[1])},s.prototype.isCardPlaceable=function(t,e){var i=window.playtouch.gameMain.board.slots[e];if(i.getNbCardsInDeck()>0){var s=i.getCardOnTop();if(1==s.isOneBellow(this.getCard(t))&&1==this.getCard(t).isDifferentSuit(s))return!0}else if(12==this.getCard(t).getWeight())return!0;return!1},s.prototype.isScoreNeedToBeApply=function(t,e){var i=window.playtouch.gameMain.board.slots[e];if(i.getNbCardsInDeck()>0){if(0==t)return!0;if(0!=t&&0==this.getCard(t-1).isRevealed())return!0}return!1},s.prototype.canMoveDeck=function(t){return this.getCardOnTop().getIndex()==t};var n=function(){this.cardNum=1,this.score=0,this.slots=[],this.standbyDeck=[],this.endingSlots=[],this.hintHistory={count:0},this.states={count:0}};n.prototype.checkArray=function(t,e){for(var i=0;i<t.length;i++)if(t[i].callback==e)return!0;return!1},n.prototype.getIDFunction=function(t,e){for(var i=0;i<t.length;i++)if(t[i].callback==e)return t[i].id;return!1},n.prototype.giveCard=function(){for(var t={},e=0;e<10;e++)this.hand.getCardOnTop().reveal(),t[e]=this.hand.getCardOnTop().getSimplified(),this.slots[e].add(this.hand.takeCard(this.hand.getCardOnTop().getIndex()));return JSON.stringify(t)},n.prototype.getYCard=function(t,e,i,s,n){var r=i,o=s,a={},d=0;for(var h in this.slots[t].cards)this.slots[t].cards.hasOwnProperty(h)&&(0==this.slots[t].cards[h].getIndex()?(d=e+n/2,a[h]=d):(0==this.slots[t].cards[h].isRevealed()&&(d+=o*r,a[h]=d),0==this.slots[t].cards[h].canMove()&&1==this.slots[t].cards[h].isRevealed()&&(0==this.slots[t].cards[h-1].isRevealed()?d+=o*r:d+=o,a[h]=d),1==this.slots[t].cards[h].canMove()&&1==this.slots[t].cards[h].isRevealed()&&(0==this.slots[t].cards[h-1].canMove()&&1==this.slots[t].cards[h-1].isRevealed()&&(d+=o),0==this.slots[t].cards[h-1].isRevealed()&&(d+=o*r),1==this.slots[t].cards[h-1].canMove()&&1==this.slots[t].cards[h-1].isRevealed()&&(d+=o),a[h]=d)));return JSON.stringify(a)},n.prototype.hasCardReachLimit=function(t,e,i,s,n,r){var o=this.slots[t].getNumOfGreyCard(),a=this.slots[t].getNumOfUnrevealCard(),d=this.slots[t].getNumOfWhiteCard(),h=0;return h=e+(a*(n*s)+o*n+d*n)+i/2,h<r?0:h>=r?1:void 0},n.prototype.getYWithLimit=function(t,e,i,s,n,r){var o=n,a=r,d={},h=0;for(var g in this.slots[t].cards)this.slots[t].cards.hasOwnProperty(g)&&(0==this.slots[t].cards[g].getIndex()?(h=e+i/2,d[g]=h):(0==this.slots[t].cards[g].isRevealed()&&(h+=a*o*s,d[g]=h),0==this.slots[t].cards[g].canMove()&&1==this.slots[t].cards[g].isRevealed()&&(0==this.slots[t].cards[g-1].isRevealed()?h+=a*o*s:h+=1*a*s,d[g]=h),1==this.slots[t].cards[g].canMove()&&1==this.slots[t].cards[g].isRevealed()&&(0==this.slots[t].cards[g-1].canMove()&&1==this.slots[t].cards[g-1].isRevealed()&&(h+=1*a*s),0==this.slots[t].cards[g-1].isRevealed()&&(h+=a*o*s),1==this.slots[t].cards[g-1].canMove()&&1==this.slots[t].cards[g-1].isRevealed()&&(h+=1*a*s),d[g]=h)));return JSON.stringify(d)},n.prototype.checkIfCardStillMovable=function(){if(this.hand.getNbCardsInDeck()>0)return 1;for(var t=0;t<10;t++){if(this.slots[t].getNbCardsInDeck()<=0)return 1;if(this.slots[t].getNbCardsInDeck()>0){for(var e=this.slots[t].getCardOnTop(),i=e.getPreviousCard(),s=0;s<this.slots[t].getNbCardsInDeck();s++)if(1==e.isSameSuit(i)&&1==e.isOneOver(i)&&1==i.isRevealed()){for(var n=0;n<10;n!=t?n++:++n)if(this.slots[n].getNbCardsInDeck()>0&&e.isOneOver(this.slots[n].getCardOnTop())){var r=this.slots[t].getCardOnTop().getIndex()-e.getIndex()+1;if(this.slots[n].add(this.slots[t].takeCard(e.getIndex(),r)),1==this.slots[n].checkValideCard())return this.slots[t].add(this.slots[n].takeCard(this.slots[n].getCard(this.slots[n].getCardOnTop().getIndex()-(r-1)).getIndex(),r)),1;this.slots[t].add(this.slots[n].takeCard(this.slots[n].getCard(this.slots[n].getCardOnTop().getIndex()-(r-1)).getIndex(),r))}e=i,i=e.getPreviousCard()}for(n=0;n<10;n!=t?n++:++n)if(this.slots[n].getNbCardsInDeck()>0){if(e.isOneOver(this.slots[n].getCardOnTop()))return 1}else if(0!=e.getIndex())return 1}}return 0},n.prototype.init=function(t){"number"!=typeof t&&(t=1),this.slots=[];for(var e=0;e<7;e++)this.slots[e]=new s;this.score=0,this.cardNum=t,this.hand=new s,this.standbyDeck=new s,this.endingSlots=[];for(e=0;e<4;e++)this.endingSlots[e]=new s;return this.hand.addSuits([0,1,2,3]).shuffle(),this},n.prototype.dealSlots=function(){if(this.hand.getNbCardsInDeck()<this.slots.length)return!1;for(var t in this.slots)this.slots.hasOwnProperty(t)&&this.slots[t].add(this.hand.deal());return this},n.prototype.addCardToStandby=function(t){var e={count:0};"number"!=typeof t&&(t=1);for(var i=0;i<t;i++)this.hand.getNbCardsInDeck()>0&&(e[i]=this.hand.getCardOnTop().getSimplified(),this.standbyDeck.add(this.hand.deal()),this.standbyDeck.getCardOnTop().reveal(),e.count++);return JSON.stringify(e)},n.prototype.resetCardDeck=function(){this.standbyDeck.cards.reverse(),this.hand.add(this.standbyDeck.takeCard(0,this.standbyDeck.getNbCardsInDeck()))},n.prototype.getResetDeckJSON=function(){var t={};for(var e in this.hand.cards)this.hand.cards.hasOwnProperty(e)&&(this.hand.cards[e].hide(),t[e]=this.hand.cards[e].getSimplified());return JSON.stringify(t)},n.prototype.initialDeal=function(t){"number"!=typeof t&&(t=28);for(var e=0;t>0;){e>this.slots.length-1&&(e=0);for(var i=0;i<e+1;i++)this.slots[e].add(this.hand.deal()),t--;e++}for(var s in this.slots)this.slots.hasOwnProperty(s)&&this.slots[s].getCardOnTop().reveal();return this},n.prototype.getMode=function(){return this.mode},n.prototype.saveState=function(t,e){var i={cardNum:t,score:e};for(var s in i.endingSlots={count:this.endingSlots.length},this.endingSlots)this.endingSlots.hasOwnProperty(s)&&(i.endingSlots[s]=this.endingSlots[s].asSimpleArray());for(var s in i.standbyDeck=this.standbyDeck.asSimpleArray(),i.hand=this.hand.asSimpleArray(),i.slots={count:this.slots.length},this.slots)this.slots.hasOwnProperty(s)&&(i.slots[s]=this.slots[s].asSimpleArray());this.states[this.states.count]=i,this.states.count++,this.hintHistory={count:0}},n.prototype.getStateCompressed=function(t,e){var i={cardNum:String(t),score:String(e)};for(var s in i.endingSlots={count:this.endingSlots.length},this.endingSlots)this.endingSlots.hasOwnProperty(s)&&(i.endingSlots[s]=this.endingSlots[s].asSimpleCompressed());for(var s in i.standbyDeck=this.standbyDeck.asSimpleCompressed(),i.hand=this.hand.asSimpleCompressed(),i.slots={count:this.slots.length},this.slots)this.slots.hasOwnProperty(s)&&(i.slots[s]=this.slots[s].asSimpleCompressed());return JSON.stringify(i)},n.prototype.loadStateCompressed=function(t){try{for(var e=t,i=0;i<4;i++)this.endingSlots[i]=new s,""!==e.endingSlots[i]&&this.endingSlots[i].add(e.endingSlots[i]);this.standbyDeck=new s,""!==e.standbyDeck&&this.standbyDeck.add(e.standbyDeck),this.hand=new s,""!==e.hand&&this.hand.add(e.hand);for(i=0;i<7;i++)this.slots[i]=new s,""!==e.slots[i]&&this.slots[i].add(e.slots[i]);this.score=parseInt(e.score),this.cardNum=parseInt(e.cardNum)}catch(t){for(i=0;i<4;i++)this.endingSlots[i]=new s;this.score=0,this.cardNum=0,this.standbyDeck=new s,this.hand=new s;for(i=0;i<7;i++)this.slots[i]=new s}},n.prototype.applyState=function(t){if("number"!=typeof t||t>=this.states.count)return!1;var e=this.states[t];for(var n in e)if("cardNum"==n&&(this.cardNum=e.cardNum),"score"==n&&(this.score=e.score),e.hasOwnProperty(n))if("function"==typeof e[n].push)for(var r in this[n]=new s,e[n])e[n].hasOwnProperty(r)&&this[n].add((new i).init(e[n][r]));else for(var o in e[n])if(e[n].hasOwnProperty(o)&&"count"!==o)for(var r in this[n][o]=new s,e[n][o])e[n][o].hasOwnProperty(r)&&this[n][o].add((new i).init(e[n][o][r]))},n.prototype.creatingSuitOnDeal=function(){this.slots[0].takeCard(0,6),this.slots[0].addSuits([1]),this.slots[0].cards.reverse();for(var t=0;t<this.slots[0].cards.length;t++)this.slots[0].rebuildOrder().cards[t].reveal();this.slots[0].takeCard(this.slots[0].getCardOnTop().getIndex()),this.hand=new s;for(var e=0;e<10;e++)this.hand.cards[e]=(new i).createCardBySpecificValue(0,1);for(t=0;t<this.hand.cards.length;t++)this.hand.rebuildOrder().cards[t];return this},n.prototype.takeLastState=function(){return 0===this.states.count?this:(this.applyState(this.states.count-2),delete this.states[this.states.count-1],this.states.count--,this)},n.prototype.isHintInHistory=function(t){return void 0!==this.hintHistory[JSON.stringify(t)]},n.prototype.resetHintHistory=function(){return this.hintHistory={count:0},this},n.prototype.addHintToHistory=function(t){return this.hintHistory[JSON.stringify(t)]=!0,this.hintHistory.count++,t},n.prototype.getCardSpecificHint=function(t,e,i){var s={count:0},n=0;if("slot"==i){var r=this.slots[t].getCard(e);if(e!=this.slots[t].getCardOnTop().getIndex())for(var o=0;o<7;o!=t?o++:++o){if(this.slots[o].getNbCardsInDeck()>0){if(r.isOneOver(this.slots[o].getCardOnTop())&&r.isDifferentSuit(this.slots[o].getCardOnTop())){var a={0:r.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(0!=r.getIndex()&&12==r.getWeight()){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("setSlot_name",[t,o]),JSON.stringify(this.addHintToHistory(s))}if(e==this.slots[t].getCardOnTop().getIndex()){for(var d=0;d<4;d++){if(this.endingSlots[d].getNbCardsInDeck()>0){if(r.isOneBellow(this.endingSlots[d].getCardOnTop())&&r.isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:r.getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(0==r.getWeight()&&r.getSuit()==d){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("moveToEndingSlots",[t,d]),JSON.stringify(this.addHintToHistory(s))}for(o=0;o<7;o!=t?o++:++o){if(this.slots[o].getNbCardsInDeck()>0){if(r.isOneOver(this.slots[o].getCardOnTop())&&r.isDifferentSuit(this.slots[o].getCardOnTop())){a={0:r.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(0!=r.getIndex()&&12==r.getWeight()){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("setSlot_name",[t,o]),JSON.stringify(this.addHintToHistory(s))}}}if("end"==i)for(r=this.endingSlots[t].getCard(e),o=0;o<7;o++){if(this.slots[o].getNbCardsInDeck()>0){if(r.isOneOver(this.slots[o].getCardOnTop())&&r.isDifferentSuit(this.slots[o].getCardOnTop())){a={0:r.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(0!=r.getIndex()&&12==r.getWeight()){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("setSlot_name",[t,o,1]),JSON.stringify(this.addHintToHistory(s))}if("standbyDeck"==i){r=this.standbyDeck.getCard(e);if(e==this.standbyDeck.getCardOnTop().getIndex()){for(o=0;o<7;o++){if(this.slots[o].getNbCardsInDeck()>0){if(r.isOneOver(this.slots[o].getCardOnTop())&&r.isDifferentSuit(this.slots[o].getCardOnTop())){a={0:r.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(12==r.getWeight()){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("setSlot_name",["standbyDeck",o]),JSON.stringify(this.addHintToHistory(s))}for(d=0;d<4;d++){if(this.endingSlots[d].getNbCardsInDeck()>0){if(r.isOneBellow(this.endingSlots[d].getCardOnTop())&&r.isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:r.getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(s=a,n++)}}else if(0==r.getWeight()&&r.getSuit()==d){a={0:r.getSimplified(),count:1};this.isHintInHistory(a)||(s=a,n++)}if(n>0)return c2_callFunction("moveToEndingSlots",["standbyDeck",d]),JSON.stringify(this.addHintToHistory(s))}}}return this.resetHintHistory(),JSON.stringify({0:"noHint"})},n.prototype.getHint=function(){for(var t={count:0},e=0,i=0;i<7;i++)if(this.slots[i].getNbCardsInDeck()>0){var s=this.slots[i].getCardOnTop();if(0!=s.getIndex())for(var n=s.getPreviousCard(),r=0;r<this.slots[i].getNbCardsInDeck();r++)1==n.isRevealed()&&(s=n,0!=s.getIndex()&&(n=s.getPreviousCard()));for(var o=0;o<7;o!=i?o++:++o){if(this.slots[o].getNbCardsInDeck()>0){if(s.isOneOver(this.slots[o].getCardOnTop())&&s.isDifferentSuit(this.slots[o].getCardOnTop())){var a={0:s.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(t=a,e++)}}else if(0!=s.getIndex()&&12==s.getWeight()){a={0:s.getSimplified(),count:1};this.isHintInHistory(a)||(t=a,e++)}if(e>0)return c2_callFunction("setSlot_name",[i,o]),JSON.stringify(this.addHintToHistory(t))}for(var d=0;d<4;d++){if(this.endingSlots[d].getNbCardsInDeck()>0){if(this.slots[i].getCardOnTop().isOneBellow(this.endingSlots[d].getCardOnTop())&&this.slots[i].getCardOnTop().isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:this.slots[i].getCardOnTop().getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(t=a,e++)}}else if(0==this.slots[i].getCardOnTop().getWeight()&&this.slots[i].getCardOnTop().getSuit()==d){a={0:this.slots[i].getCardOnTop().getSimplified(),count:1};this.isHintInHistory(a)||(t=a,e++)}if(e>0)return c2_callFunction("moveToEndingSlots",[i,d]),JSON.stringify(this.addHintToHistory(t))}if(this.standbyDeck.getNbCardsInDeck()>0){for(o=0;o<7;o++){if(this.slots[o].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneOver(this.slots[o].getCardOnTop())&&this.standbyDeck.getCardOnTop().isDifferentSuit(this.slots[o].getCardOnTop())){a={0:this.standbyDeck.getCardOnTop().getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(t=a,e++)}}else if(12==this.standbyDeck.getCardOnTop().getWeight()){a={0:this.standbyDeck.getCardOnTop().getSimplified(),count:1};this.isHintInHistory(a)||(t=a,e++)}if(e>0)return c2_callFunction("setSlot_name",["standbyDeck",o]),JSON.stringify(this.addHintToHistory(t))}for(d=0;d<4;d++){if(this.endingSlots[d].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneBellow(this.endingSlots[d].getCardOnTop())&&this.standbyDeck.getCardOnTop().isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:this.standbyDeck.getCardOnTop().getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};this.isHintInHistory(a)||(t=a,e++)}}else if(0==this.standbyDeck.getCardOnTop().getWeight()&&this.standbyDeck.getCardOnTop().getSuit()==d){a={0:this.standbyDeck.getCardOnTop().getSimplified(),count:1};this.isHintInHistory(a)||(t=a,e++)}if(e>0)return c2_callFunction("moveToEndingSlots",["standbyDeck",d]),JSON.stringify(this.addHintToHistory(t))}}}if(0==e){if(0!==this.hintHistory.count)return this.resetHintHistory().getHint();if(this.hand.getNbCardsInDeck()>0||this.standbyDeck.getNbCardsInDeck()>0){a={0:"hand",count:1};return this.isHintInHistory(a)||(t=a),c2_callFunction("setSlot_name",["hand"]),JSON.stringify(this.addHintToHistory(t))}if(0==this.standbyDeck.getNbCardsInDeck()&&0==this.hand.getNbCardsInDeck()){a={0:"no hints",count:1};return this.isHintInHistory(a)||(t=a),c2_callFunction("setSlot_name",["no hints"]),JSON.stringify(this.addHintToHistory(t))}}},n.prototype.getExplicitCardHint=function(t,e){var i={count:0},s={};if(t>=0&&("standbyDeck"===e||"hand"===e)&&("standbyDeck"===e&&(s=this.standbyDeck.getCard(t)),"hand"===e&&(s=this.hand.getCard(t)),s!={})){for(var n=0;n<7;n++)if(this.slots[n].getNbCardsInDeck()>0){if(s.isOneOver(this.slots[n].getCardOnTop())&&s.isDifferentSuit(this.slots[n].getCardOnTop())){var r={0:s.getSimplified(),1:this.slots[n].getCardOnTop().getSimplified(),count:2};void 0===i[JSON.stringify(r)]&&(0,i[JSON.stringify(r)]=!0,i.count++)}}else if(12==s.getWeight()){r={0:s.getSimplified(),count:1};void 0===i[JSON.stringify(r)]&&(0,i[JSON.stringify(r)]=!0,i.count++)}for(var o=0;o<4;o++)if(this.endingSlots[o].getNbCardsInDeck()>0){if(s.isOneBellow(this.endingSlots[o].getCardOnTop())&&s.isSameSuit(this.endingSlots[o].getCardOnTop())){r={0:s.getSimplified(),1:this.endingSlots[o].getCardOnTop().getSimplified(),count:2};void 0===i[JSON.stringify(r)]&&(0,i[JSON.stringify(r)]=!0,i.count++)}}else if(0==s.getWeight()&&s.getSuit()==o){r={0:s.getSimplified(),count:1};void 0===i[JSON.stringify(r)]&&(0,i[JSON.stringify(r)]=!0,i.count++)}}if(0===i.count){r={0:"no hints",count:1};i[JSON.stringify(r)]=!0,i.count++}return i},n.prototype.customGetHint=function(){for(var t={count:0},e=0,i=0;i<7;i++)if(this.slots[i].getNbCardsInDeck()>0){var s=this.slots[i].getCardOnTop();if(0!=s.getIndex())for(var n=s.getPreviousCard(),r=0;r<this.slots[i].getNbCardsInDeck();r++)1==n.isRevealed()&&(s=n,0!=s.getIndex()&&(n=s.getPreviousCard()));for(var o=0;o<7;o!=i?o++:++o)if(this.slots[o].getNbCardsInDeck()>0){if(s.isOneOver(this.slots[o].getCardOnTop())&&s.isDifferentSuit(this.slots[o].getCardOnTop())){var a={0:s.getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}}else if(0!=s.getIndex()&&12==s.getWeight()){a={0:s.getSimplified(),count:1};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}for(var d=0;d<4;d++)if(this.endingSlots[d].getNbCardsInDeck()>0){if(this.slots[i].getCardOnTop().isOneBellow(this.endingSlots[d].getCardOnTop())&&this.slots[i].getCardOnTop().isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:this.slots[i].getCardOnTop().getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}}else if(0==this.slots[i].getCardOnTop().getWeight()&&this.slots[i].getCardOnTop().getSuit()==d){a={0:this.slots[i].getCardOnTop().getSimplified(),count:1};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}if(this.standbyDeck.getNbCardsInDeck()>0){for(o=0;o<7;o++)if(this.slots[o].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneOver(this.slots[o].getCardOnTop())&&this.standbyDeck.getCardOnTop().isDifferentSuit(this.slots[o].getCardOnTop())){a={0:this.standbyDeck.getCardOnTop().getSimplified(),1:this.slots[o].getCardOnTop().getSimplified(),count:2};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}}else if(12==this.standbyDeck.getCardOnTop().getWeight()){a={0:this.standbyDeck.getCardOnTop().getSimplified(),count:1};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}for(d=0;d<4;d++)if(this.endingSlots[d].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneBellow(this.endingSlots[d].getCardOnTop())&&this.standbyDeck.getCardOnTop().isSameSuit(this.endingSlots[d].getCardOnTop())){a={0:this.standbyDeck.getCardOnTop().getSimplified(),1:this.endingSlots[d].getCardOnTop().getSimplified(),count:2};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}}else if(0==this.standbyDeck.getCardOnTop().getWeight()&&this.standbyDeck.getCardOnTop().getSuit()==d){a={0:this.standbyDeck.getCardOnTop().getSimplified(),count:1};void 0===t[JSON.stringify(a)]&&(e++,t[JSON.stringify(a)]=!0,t.count++)}}}if(0==e){if(0!==t.count)return t;if(this.hand.getNbCardsInDeck()>0||this.standbyDeck.getNbCardsInDeck()>0){a={0:"hand",count:1};void 0===t[JSON.stringify(a)]&&(t[JSON.stringify(a)]=!0,t.count++)}else if(0==this.standbyDeck.getNbCardsInDeck()&&0==this.hand.getNbCardsInDeck()){a={0:"no hints",count:1};void 0===t[JSON.stringify(a)]&&(t[JSON.stringify(a)]=!0,t.count++)}}return t},n.prototype.doesThisCardHaveMoves=function(t,e){var i={};if(t>=0&&("standbyDeck"===e||"hand"===e)&&("standbyDeck"===e&&(i=this.standbyDeck.getCard(t)),"hand"===e&&(i=this.hand.getCard(t)),i!={})){for(var s=0;s<7;s++)if(this.slots[s].getNbCardsInDeck()>0){if(i.isOneOver(this.slots[s].getCardOnTop())&&i.isDifferentSuit(this.slots[s].getCardOnTop()))return!0}else if(12==i.getWeight())return!0;for(var n=0;n<4;n++)if(this.endingSlots[n].getNbCardsInDeck()>0){if(i.isOneBellow(this.endingSlots[n].getCardOnTop())&&i.isSameSuit(this.endingSlots[n].getCardOnTop()))return!0}else if(0==i.getWeight()&&i.getSuit()==n)return!0}return!1},n.prototype.checkStandbyDeckForFutureMoves=function(){if(this.standbyDeck.getNbCardsInDeck()>0)for(var t=this.standbyDeck.getNbCardsInDeck(),e=this.cardNum,i=e-1,s=Math.floor(t/e),n=0;n<=s;){if(this.doesThisCardHaveMoves(i,"standbyDeck"))return!0;i+=e,n++}return!1},n.prototype.checkHandDeckForFutureMoves=function(){if(this.hand.getNbCardsInDeck()>0){var t=this.hand.getNbCardsInDeck(),e=this.cardNum,i=t-e,s=Math.floor(t/e),n=0;if(t%e>0&&this.doesThisCardHaveMoves(this.hand.getCardAtBottom(),"hand"))return!0;for(;n<=s;){if(this.doesThisCardHaveMoves(i,"hand"))return!0;i-=e,n++}}return!1},n.prototype.isAnyMovesPossibleOnTheBoard=function(){for(var t=0;t<7;t++)if(this.slots[t].getNbCardsInDeck()>0){var e=this.slots[t].getCardOnTop();if(0!=e.getIndex())for(var i=e.getPreviousCard(),s=0;s<this.slots[t].getNbCardsInDeck();s++)1==i.isRevealed()&&(e=i,0!=e.getIndex()&&(i=e.getPreviousCard()));for(var n=0;n<7;n!=t?n++:++n)if(this.slots[n].getNbCardsInDeck()>0){if(e.isOneOver(this.slots[n].getCardOnTop())&&e.isDifferentSuit(this.slots[n].getCardOnTop()))return!0}else if(0!=e.getIndex()&&12==e.getWeight())return!0;for(var r=0;r<4;r++)if(this.endingSlots[r].getNbCardsInDeck()>0){if(this.slots[t].getCardOnTop().isOneBellow(this.endingSlots[r].getCardOnTop())&&this.slots[t].getCardOnTop().isSameSuit(this.endingSlots[r].getCardOnTop()))return!0}else if(0==this.slots[t].getCardOnTop().getWeight()&&this.slots[t].getCardOnTop().getSuit()==r)return!0;if(this.standbyDeck.getNbCardsInDeck()>0){for(n=0;n<7;n++)if(this.slots[n].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneOver(this.slots[n].getCardOnTop())&&this.standbyDeck.getCardOnTop().isDifferentSuit(this.slots[n].getCardOnTop()))return!0}else if(12==this.standbyDeck.getCardOnTop().getWeight())return!0;for(r=0;r<4;r++)if(this.endingSlots[r].getNbCardsInDeck()>0){if(this.standbyDeck.getCardOnTop().isOneBellow(this.endingSlots[r].getCardOnTop())&&this.standbyDeck.getCardOnTop().isSameSuit(this.endingSlots[r].getCardOnTop()))return!0}else if(0==this.standbyDeck.getCardOnTop().getWeight()&&this.standbyDeck.getCardOnTop().getSuit()==r)return!0}}return!1},n.prototype.isThereAnyFutureMoves=function(){return this.isAnyMovesPossibleOnTheBoard()||this.checkHandDeckForFutureMoves()||this.checkStandbyDeckForFutureMoves()?1:0},n.prototype.isGameFinished=function(){for(var t=0,e=0;e<4;e++)13==this.endingSlots[e].getNbCardsInDeck()&&t++;return 4==t},n.prototype.isGameEndable=function(){for(var t=0;t<7;t++)if(this.slots[t].getNbCardsInDeck()>0&&this.slots[t].getNumOfUnrevealCard()>0)return!1;return 0==this.hand.getNbCardsInDeck()&&0==this.standbyDeck.getNbCardsInDeck()},n.prototype.getCardToEndingSlot=function(){for(var t,e={count:0},i=0,s=0;s<4;s++)for(var n=0;n<13;n++)for(var r=0;r<7;r++)this.slots[r].getNbCardsInDeck()>0&&n==this.slots[r].getCardOnTop().getWeight()&&(t=this.slots[r].getCardOnTop().getSimplified(),i=this.slots[r].getCardOnTop().getSuit(),this.endingSlots[i].add(this.slots[r].deal()),e[e.count]={lastDeck:r,currentDeck:i,aCard:t},e.count++);return JSON.stringify(e)},n.prototype.arrangeCardForAuto=function(){this.hand=new s,this.standbyDeck=new s;for(var t=0;t<3;t++)this.endingSlots[t]=new s,this.endingSlots[t].addSuits([t]);for(var e=0;e<7;e++)this.slots[e]=new s;this.slots[0].addSuits([3]),this.slots[0].cards.reverse();for(var i=0;i<this.slots[0].cards.length;i++)this.slots[0].rebuildOrder().cards[i].reveal()},window.Card=i,window.solitaireVersion=new e,window.Deck=s,window.Board=n})();